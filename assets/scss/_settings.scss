
/* ==========================================================================
  Variables
   ========================================================================== */ 

/* Colors */

$primarycolor: #4f2683;
$primarycolor_dark: darken($primarycolor, 6%);
$primarycolor_meddark: darken($primarycolor, 15%);
$primarycolor_verydark: darken($primarycolor, 30%);
$primarycolor_light: lighten($primarycolor, 10%);
$primarycolor_medlight: lighten($primarycolor, 20%);
$primarycolor_verylight: lighten($primarycolor, 40%);
$secondarycolor: #f68e1d;
$secondarycolor_dark: darken($secondarycolor, 6%);
$secondarycolor_meddark: darken($secondarycolor, 15%);
$secondarycolor_verydark: darken($secondarycolor, 30%);
$secondarycolor_light: lighten($secondarycolor, 10%);
$secondarycolor_medlight: lighten($secondarycolor, 20%);
$secondarycolor_verylight: lighten($secondarycolor, 40%);
$textcolor: #686868;
$textcolor_strong: darken($textcolor, 10%);
$textcolor_medstrong: darken($textcolor, 20%);
$textcolor_verystrong: darken($textcolor, 30%);
$textcolor_subtle: lighten($textcolor, 10%);
$textcolor_medsubtle: lighten($textcolor, 25%);
$textcolor_verysubtle: lighten($textcolor, 40%);
$textcolor_reversed: #eee;
$textcolor_reversed_strong: lighten($textcolor_reversed, 10%);
$textcolor_reversed_medstrong: lighten($textcolor_reversed, 20%);
$textcolor_reversed_verystrong: lighten($textcolor_reversed, 30%);
$textcolor_reversed_subtle: darken($textcolor_reversed, 10%);
$textcolor_reversed_medsubtle: darken($textcolor_reversed, 25%);
$textcolor_reversed_verysubtle: darken($textcolor_reversed, 40%);
$offsetcolor: #cccccc;
$offsetcolor_subtle: lighten($offsetcolor, 5%);
$offsetcolor_medsubtle: lighten($offsetcolor, 10%);
$offsetcolor_verysubtle: lighten($offsetcolor, 20%);
$offsetcolor_strong: darken($offsetcolor, 10%);
$offsetcolor_medstrong: darken($offsetcolor, 20%);
$offsetcolor_verystrong: darken($offsetcolor, 30%);
$darkcolor: #222222;
$darkcolor_light: lighten($darkcolor, 10%);
$darkcolor_medlight: lighten($darkcolor, 20%);
$darkcolor_verylight: lighten($darkcolor, 30%);
$darkcolor_dark: darken($darkcolor, 10%);
$darkcolor_meddark: darken($darkcolor, 20%);
$darkcolor_verydark: darken($darkcolor, 30%);
$alertcolor: #c40000;
$alertcolor_dark: darken($alertcolor, 10%);
$alertcolor_meddark: darken($alertcolor, 20%);
$alertcolor_verydark: darken($alertcolor, 30%);
$alertcolor_light: lighten($alertcolor, 20%);
$alertcolor_medlight: lighten($alertcolor, 35%);
$alertcolor_verylight: lighten($alertcolor, 55%);
$successcolor: #00b548;
$successcolor_dark: darken($successcolor, 10%);
$successcolor_meddark: darken($successcolor, 20%);
$successcolor_verydark: darken($successcolor, 30%);
$successcolor_light: lighten($successcolor, 20%);
$successcolor_medlight: lighten($successcolor, 35%);
$successcolor_verylight: lighten($successcolor, 55%);

/* Functionality / Structure */

$transitionduration: .4s;
$spacing: 5%;
$spacing-sm: $spacing * .75;
$spacing-lg: $spacing * 2;
$spacing-fixed: 30px;
$spacing-fixed-sm: $spacing-fixed * .7;
$spacing-fixed-xs: $spacing-fixed * .4;
$spacing-fixed-lg: $spacing-fixed * 1.5;
$maxwidth: 1200px;
$maxwidth-lg: $maxwidth * 1.2;
$maxwidth-sm: $maxwidth * .8;
$maxwidth-xs: $maxwidth * .4;


/* ==========================================================================
   Mixins
   ========================================================================== */ 

@mixin font-size($sizeValue: 1.6) {
  font-size: ($sizeValue * 10) + px;
  font-size: $sizeValue + rem;
}
@mixin line-height($sizeValue: 1.6) {
  line-height: ($sizeValue * 10) + px;
  line-height: $sizeValue + rem;
}
@mixin rgba($type, $color, $percentage) {
  @if $type == color {
    color: transd($color, $percentage);
    color: rgba($color, $percentage);
  }
  @if $type == bg {
    background-color: transd($color, $percentage);
    background-color: rgba($color, $percentage);
  }
}
@mixin circle {
  @include border-radius(50%);
}
@mixin opacity($opacity) {
  opacity: $opacity;
  filter: alpha(opacity=($opacity * 100));
}
@mixin absolutecenter($axis: "both"){
  position:absolute;
  @if $axis == "y"{
    top:50%;
    @include translateY(-50%);
  }
  @if $axis == "x"{
    left:50%;
    @include translateX(-50%);
  }
  @if $axis == "both"{
    top:50%;
    left:50%;
    @include translate(-50%,-50%);
  }
}
@mixin ctr($args...) {
  @include absolutecenter($args...);
}
@mixin unabsolutecenter() {
  position: inherit;
  top: inherit;
  left: inherit;
  @include translate(0,0);
}
@mixin unctr($args...) {
  @include unabsolutecenter($args...);
}
@mixin triangle($direction, $size: 6px, $color: #222){
  content: '';
  display: block;
  position: absolute;
  height: 0; width: 0;
  @if ($direction == 'up'){
    border-bottom: $size solid $color;
    border-left: $size solid transparent;
    border-right: $size solid transparent;
  }
  @else if ($direction == 'down'){
    border-top: $size solid $color;
    border-left: $size solid transparent;
    border-right: $size solid transparent;
  }
  @else if ($direction == 'left'){
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
  }
  @else if ($direction == 'right'){
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
  }
}
@mixin cf() {
  *zoom: 1;
  &:before, &:after {
    content: '';
    display: table;
  }
  &:after {
    clear: both;
  }
}

/* Buttons */

@mixin button($fontsize, $bgcolor, $fontcolor, $padding) {
  background: $bgcolor;
  border: none;
  cursor: pointer;
  display: block;
  height: auto;
  margin: 0;
  overflow: hidden;
  text-decoration: none;
  text-align: center;
  text-transform: uppercase;
  @include secondaryfont();
  @include font-size($fontsize);
  @include line-height($fontsize);
  color: $fontcolor;
  padding: $padding;
  @include transition-duration($transitionduration);
  &:hover {
    background: lighten($bgcolor, 6%);
    color: $fontcolor;
    text-decoration: none;
  }
  &:active {
    @include box-shadow(inset 0 0 6px rgba(0,0,0,.5));
    outline: none;
  }
  &:visited {
    color: $fontcolor;
  }
  @include bp(md) {
    display: block;
    width: 100%;
  }
}
@mixin ghostbutton($fontsize, $bordercolor, $spacing) {
  border: 1px solid $bordercolor;
  @include border-radius(3px);
  cursor: pointer;
  display: inline-block;
  height: auto;
  margin: 0;
  overflow: hidden;
  text-decoration: none;
  text-align: center;
  @include secondaryfont();
  @include font-size($fontsize);
  @include line-height($fontsize);
  color: $bordercolor;
  padding: $spacing;
  @include transition-duration($transitionduration);
  &:hover {
    background: $bordercolor;
    color: #fff;
    text-decoration: none;
  }
  &:active {
    @include box-shadow(inset 0 0 6px rgba(0,0,0,.5));
    outline: none;
  }
  &:visited {
    color: #fff;
  }
  @include bp(md) {
    display: block;
    width: 100%;
  }
}

/* Fonts */

@mixin primaryfont() { font-family: arial, helvetica, sans-serif; }
@mixin secondaryfont() { font-family: georgia, times, serif; }

/* Breakpoints */

@mixin bp($point) {
  @if $point == xl {
    @media (max-width: 1050px) { @content; }
  }
  @else if $point == lg {
    @media (max-width: 900px) { @content; }
  }
  @else if $point == md {
    @media (max-width: 768px)  { @content; }
  }
  @else if $point == sm {
    @media (max-width: 600px)  { @content; }
  }
  @else if $point == xs {
    @media (max-width: 400px)  { @content; }
  }
}
